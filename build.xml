<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="SSLTester">
	<property environment="env"/>
	<property name="ECLIPSE_HOME" value="../../../../../tools/eclipse/"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.8"/>
	<property name="source" value="1.8"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="launch4j.dir" location="${build.dir}" />
	
	<path id="SSLTester.classpath">
		<pathelement location="bin"/>
	</path>
	
	<path id="build.classpath">
		<pathelement path="${build.dir}/launch4j.jar"/>
        <pathelement path="${build.dir}/xstream.jar"/>
	</path>
	
	<target name="init">
		<mkdir dir="bin"/>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src/main/java">
				<exclude name="**/*.launch"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src/test/java">
				<exclude name="**/*.launch"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src/main/resources">
				<exclude name="**/*.launch"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin"/>
	</target>
	<target depends="clean" name="cleanall"/>

	<taskdef name="launch4j"
	    classname="net.sf.launch4j.ant.Launch4jTask"
	    classpath="${build.dir}/launch4j.jar
	        :${build.dir}/xstream.jar" />
	
	<!-- TODO:
	     Needs dependency bin/windres.exe from launch4j installation. -->
	<target depends="jarFile" name="launcher">
		<launch4j configFile="./launcher.xml" outfile="SSLTester.exe" />
	</target>
	
	<target depends="build" name="jarFile">
        <echo message="Building JAR file..." />
		<jar destfile="ssltester.jar" 
			basedir="bin" 
			excludes="keystore.jks, keystore.jks.bak">
			<manifest>
				<attribute name="Main-Class" value="org.gkh.net.ssl.App"/>
				<attribute name="Built-By" value="Garve Hays"/>
			</manifest>
		</jar>
	</target>

	<target depends="build-subprojects,build-project" name="build"/>
	<target name="build-subprojects"/>
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src/main/java"/>
			<src path="src/test/java"/>
			<src path="src/main/resources"/>
			<classpath refid="SSLTester.classpath"/>
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar"/>
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
		<antcall target="build"/>
	</target>

	<!-- Run Targets -->
	<target name="SSLClient">
		<java classname="org.gkh.net.SSLClient" failonerror="true" fork="yes">
			<jvmarg line="-Djavax.net.debug=ssl:handshake"/>
			<classpath refid="SSLTester.classpath"/>
		</java>
	</target>
	<target name="SSLTester Swing App">
		<java classname="org.gkh.net.ssl.App" failonerror="true" fork="yes">
			<classpath refid="SSLTester.classpath"/>
		</java>
	</target>
</project>
